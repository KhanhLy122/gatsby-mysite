{"version":3,"sources":["webpack:///./src/templates/tags-list-template.js","webpack:///./src/components/common/Page/styles.js","webpack:///./src/components/common/Page/Page.js","webpack:///./src/components/common/Page/index.js","webpack:///./node_modules/lodash/kebabCase.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","_components_common_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_common_Page__WEBPACK_IMPORTED_MODULE_4__","TagsListTemplate","_ref","data","_data$site$siteMetada","site","siteMetadata","title","subtitle","group","allMarkdownRemark","a","createElement","description","map","tag","key","fieldValue","to","kebabCase","totalCount","PageWrapper","styled","div","withConfig","displayName","componentId","Page","children","pageRef","useRef","useEffect","current","scrollIntoView","react_default","ref","className","common_Page_Page","createCompounder","result","word","index","toLowerCase","module","exports"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAAO,EAAAE,GAAAE,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KA+BaI,EAAK,aAiBHS,UA1CU,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAAWC,EACTD,EAAKE,KAAKC,aAA9BC,EAD6BH,EAC7BG,MAAOC,EADsBJ,EACtBI,SACPC,EAAUN,EAAKO,kBAAfD,MAER,OACEf,EAAAiB,EAAAC,cAACb,EAAA,EAAD,CAAQQ,MAAK,UAAYA,EAASM,YAAaL,GAC7Cd,EAAAiB,EAAAC,cAACZ,EAAA,EAAD,CAAMO,MAAM,QACVb,EAAAiB,EAAAC,cAAA,UACGH,EAAMK,IAAI,SAAAC,GAAG,OACZrB,EAAAiB,EAAAC,cAAA,MAAII,IAAKD,EAAIE,YACXvB,EAAAiB,EAAAC,cAAChB,EAAA,KAAD,CAAMsB,GAAE,QAAUC,IAAUJ,EAAIE,YAAxB,KACLF,EAAIE,WACJ,IAFH,IAIGF,EAAIK,WAJP,kECdDC,SAAcC,EAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,0cCoBTK,EAnBF,SAAAzB,GAAyB,IAAtBK,EAAsBL,EAAtBK,MAAOqB,EAAe1B,EAAf0B,SACfC,EAAUC,mBAMhB,OAJAC,oBAAU,WACRF,EAAQG,QAAQC,mBAIhBC,EAAAvB,EAAAC,cAACS,EAAD,KACEa,EAAAvB,EAAAC,cAAA,OAAKuB,IAAKN,EAASO,UAAU,QAC3BF,EAAAvB,EAAAC,cAAA,OAAKwB,UAAU,eACZ7B,GAAS2B,EAAAvB,EAAAC,cAAA,MAAIwB,UAAU,eAAe7B,GACvC2B,EAAAvB,EAAAC,cAAA,OAAKwB,UAAU,cAAcR,OCfvCxC,EAAAG,EAAAD,EAAA,sBAAA+C,yBCAA,IAuBAlB,EAvBuB/B,EAAQ,IAuB/BkD,CAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAE,EAAA,QAAAD,EAAAE,gBAGAC,EAAAC,QAAAzB","file":"component---src-templates-tags-list-template-js-426a0c4bedc9d3d09f35.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport Layout from '../components/common/Layout';\nimport Page from '../components/common/Page';\n\nconst TagsListTemplate = ({ data }) => {\n  const { title, subtitle } = data.site.siteMetadata;\n  const { group } = data.allMarkdownRemark;\n\n  return (\n    <Layout title={`Tags - ${title}`} description={subtitle}>\n      <Page title=\"Tags\">\n        <ul>\n          {group.map(tag => (\n            <li key={tag.fieldValue}>\n              <Link to={`/tag/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue}\n                {' '}\n(\n                {tag.totalCount}\n)\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query TagsListQuery {\n    site {\n      siteMetadata {\n        title\n        subtitle\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default TagsListTemplate;\n","import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  .page {\n    @include margin-bottom(2);\n\n    &__inner {\n      padding: 25px 20px;\n    }\n\n    &__title {\n      font-size: $typographic-base-font-size * 2.5;\n      font-weight: 600;\n      @include line-height(2);\n      @include margin-top(0);\n      @include margin-bottom(1.45);\n    }\n\n    &__body {\n      font-size: $typographic-base-font-size;\n      @include line-height(1);\n      @include margin(0, 0, 1);\n    }\n  }\n\n  @include breakpoint-sm {\n    .page {\n      lost-column: 7/12;\n\n      &__inner {\n        padding: 30px 20px;\n      }\n    }\n  }\n\n  @include breakpoint-md {\n    .page {\n      lost-column: 2/3;\n\n      &__inner {\n        padding: 40px 35px;\n      }\n    }\n  }\n`;\n","import React, { useRef, useEffect } from 'react';\nimport { PageWrapper } from './styles';\n\nconst Page = ({ title, children }) => {\n  const pageRef = useRef();\n\n  useEffect(() => {\n    pageRef.current.scrollIntoView();\n  });\n\n  return (\n    <PageWrapper>\n      <div ref={pageRef} className=\"page\">\n        <div className=\"page__inner\">\n          {title && <h1 className=\"page__title\">{title}</h1>}\n          <div className=\"page__body\">{children}</div>\n        </div>\n      </div>\n    </PageWrapper>\n  );\n};\n\nexport default Page;\n","export { default } from './Page';\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"sourceRoot":""}