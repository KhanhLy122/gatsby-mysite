{"version":3,"sources":["webpack:///./src/components/contact/ContactForm/styles.js","webpack:///./src/components/contact/ContactForm/index.js","webpack:///./src/pages/contact.js"],"names":["ContactWrapper","styled","div","withConfig","displayName","componentId","Wrapper","_ref","theme","themeConfig","text","InputField","_ref2","error","_ref3","textarea","Center","Error","Text","h4","_ref4","enhance","compose","withFormik","mapPropsToValues","name","email","message","recaptcha","validationSchema","Yup","shape","required","handleSubmit","_handleSubmit","asyncToGenerator_default","regenerator_default","a","mark","_callee","setSubmitting","resetForm","encode","wrap","_context","prev","next","data","Object","keys","map","key","encodeURIComponent","join","fetch","method","headers","Content-Type","body","form-name","g-recaptcha-response","navigate","t0","alert","stop","_x","_x2","apply","this","arguments","errors","touched","setFieldValue","isSubmitting","react_default","createElement","common","Consumer","as","SmallerContainer","href","target","formik_esm","data-netlify","data-netlify-recaptcha","data-netlify-honeypot","htmlFor","aria-label","component","FastField","type","Recaptcha","sitekey","onChange","value","disabled","Contact","title","location","contact_ContactForm"],"mappings":"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","file":"component---src-pages-contact-js-1c939bcc1c3a7b70a387.js","sourcesContent":["import styled from 'styled-components';\nimport themeConfig from '../../../config/theme';\n\nexport const ContactWrapper = styled.div`\n  padding: 2rem 0;\n  text-align: left;\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 2rem;\n  color: ${({ theme }) => themeConfig[theme].text[0]};\n`;\n\nexport const InputField = styled.div`\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  box-sizing: border-box;\n  transition: all 0.2s ease;\n  text-align: left;\n  border-width: 1px;\n  border-color: #212121;\n  border-style: solid;\n  border-radius: 4px;\n  padding: 0.6rem 1rem;\n  -webkit-appearance: none;\n  color: #828282;\n\n  &:focus {\n    border-color: #212121;\n    transition: all 0.2s ease;\n  }\n\n  ${({ error }) => error\n    && `\nborder-color: red;\n`};\n\n  ${({ textarea }) => textarea\n    && `\nresize: vertical;\nmin-height: 8rem;\nmargin: 0;\n`};\n`;\n\nexport const Center = styled.div`\n  text-align: center;\n`;\n\nexport const Error = styled.div`\n  color: red;\n`;\n\nexport const Text = styled.h4`\n  color: ${({ theme }) => themeConfig[theme].text[0]};\n`;\n","import React from 'react';\nimport { compose } from 'recompose';\nimport {\n Form, FastField, ErrorMessage, withFormik,\n} from 'formik';\nimport * as Yup from 'yup';\nimport Recaptcha from 'react-google-recaptcha';\nimport { navigate } from 'gatsby';\nimport { SmallerContainer, CustomButton, ThemeContext } from '../../common';\nimport {\n ContactWrapper, Wrapper, InputField, Center, Error, Text,\n} from './styles';\n\nconst ContactForm = ({\n errors, touched, setFieldValue, isSubmitting,\n}) => (\n  <ThemeContext.Consumer>\n    {({ theme }) => (\n      <ContactWrapper as={SmallerContainer}>\n        <Text theme={theme}>\n          Feel free to email me via\n          {' '}\n          <a href=\"mailto:ismai23l@hotmail.com\" target=\"_top\">\n            ismai23l@hotmail.com\n          </a>\n        </Text>\n        <Text as=\"p\" theme={theme}>\n          Or fill in the contact form down below\n        </Text>\n        <Form\n          method=\"post\"\n          name=\"doananh234\"\n          data-netlify=\"true\"\n          data-netlify-recaptcha=\"true\"\n          data-netlify-honeypot=\"bot-field\"\n        >\n          <noscript>\n            <p>This form wonâ€™t work with Javascript disabled</p>\n          </noscript>\n          <Wrapper theme={theme}>\n            <label htmlFor=\"name\" aria-label=\"please insert your name\">\n              Full name:\n              <InputField\n                component=\"input\"\n                as={FastField}\n                type=\"text\"\n                error={touched.name && errors.name ? 1 : 0}\n                name=\"name\"\n              />\n            </label>\n            <ErrorMessage component={Error} name=\"name\" />\n          </Wrapper>\n          <Wrapper theme={theme}>\n            <label htmlFor=\"email\" aria-label=\"please insert your email\">\n              Your email:\n              <InputField\n                component=\"input\"\n                as={FastField}\n                type=\"email\"\n                error={touched.email && errors.email ? 1 : 0}\n                name=\"email\"\n              />\n            </label>\n            <ErrorMessage component={Error} name=\"email\" />\n          </Wrapper>\n          <Wrapper theme={theme}>\n            <label htmlFor=\"message\" aria-label=\"please insert your message\">\n              Message:\n              <InputField\n                component=\"textarea\"\n                as={FastField}\n                error={touched.message && errors.message ? 1 : 0}\n                name=\"message\"\n                textarea=\"true\"\n              />\n            </label>\n            <ErrorMessage component={Error} name=\"message\" />\n          </Wrapper>\n          <FastField\n            component={Recaptcha}\n            sitekey=\"6Lcs6lQUAAAAAEwhNH2IsobIe2csdda4TU3efpMN\"\n            name=\"recaptcha\"\n            onChange={value => setFieldValue('recaptcha', value)}\n          />\n          <ErrorMessage component={Error} name=\"recaptcha\" />\n          <Center>\n            <CustomButton type=\"submit\" disabled={isSubmitting}>\n              Send\n            </CustomButton>\n          </Center>\n        </Form>\n      </ContactWrapper>\n    )}\n  </ThemeContext.Consumer>\n);\n\nconst enhance = compose(\n  withFormik({\n    mapPropsToValues: () => ({\n      name: '',\n      email: '',\n      message: '',\n      recaptcha: '',\n    }),\n    validationSchema: () => Yup.object().shape({\n        name: Yup.string().required('Name is required'),\n        email: Yup.string()\n          .email('Please enter a valid email!')\n          .required('Email is required!'),\n        message: Yup.string().required('Message is required'),\n        recaptcha: Yup.string().required('Robots are not welcome yet!'),\n      }),\n    handleSubmit: async({\n name, email, message, recaptcha,\n}, { setSubmitting, resetForm }) => {\n      try {\n        const encode = data => {\n          return Object.keys(data)\n            .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`)\n            .join('&');\n        };\n        await fetch('/?no-cache=1', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: encode({\n            'form-name': 'doananh234',\n            name,\n            email,\n            message,\n            'g-recaptcha-response': recaptcha,\n          }),\n        });\n        setSubmitting(false);\n        resetForm();\n        navigate('/thanks/');\n      } catch (err) {\n        setSubmitting(false);\n        alert('Something went wrong, please try again!') // eslint-disable-line\n      }\n    },\n  }),\n);\n\nexport default enhance(ContactForm);\n","import React from 'react';\nimport { Layout, SEO } from '../components/common';\nimport ContactForm from '../components/contact/ContactForm';\n\nconst Contact = () => (\n  <Layout>\n    <SEO title=\"Contact\" type=\"Organization\" location=\"/contact\" />\n    <ContactForm />\n  </Layout>\n);\nexport default Contact;\n"],"sourceRoot":""}